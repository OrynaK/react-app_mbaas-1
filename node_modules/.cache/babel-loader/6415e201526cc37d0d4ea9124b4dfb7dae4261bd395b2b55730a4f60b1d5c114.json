{"ast":null,"code":"export async function registerUser(userData) {\n  try {\n    // Отримати дані з об'єкта userData, такі як name, email, password, age, gender, country\n    const {\n      name,\n      email,\n      password,\n      age,\n      gender,\n      country\n    } = userData;\n\n    // Ось ваша логіка для реєстрації користувача на сервері\n    // Наприклад, ви можете використовувати fetch або Axios для відправлення даних на сервер\n    // Ви можете встановити URL сервера, куди ви хочете відправити ці дані\n    const response = await fetch('/registrationEndpoint', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name,\n        email,\n        password,\n        age,\n        gender,\n        country\n      })\n    });\n    if (!response.ok) {\n      throw new Error('Failed to register user');\n    }\n\n    // Відповідь успішна, тут можна виконати додаткові дії, якщо потрібно\n  } catch (error) {\n    // Виникла помилка при реєстрації користувача\n    throw new Error('Failed to register user: ' + error.message);\n  }\n}","map":{"version":3,"names":["registerUser","userData","name","email","password","age","gender","country","response","fetch","method","headers","body","JSON","stringify","ok","Error","error","message"],"sources":["C:/Users/Xiaomi/Downloads/practice-generated (1)/practice/src/service/UserService.js"],"sourcesContent":["export async function registerUser(userData) {\r\n    try {\r\n        // Отримати дані з об'єкта userData, такі як name, email, password, age, gender, country\r\n        const { name, email, password, age, gender, country } = userData;\r\n\r\n        // Ось ваша логіка для реєстрації користувача на сервері\r\n        // Наприклад, ви можете використовувати fetch або Axios для відправлення даних на сервер\r\n        // Ви можете встановити URL сервера, куди ви хочете відправити ці дані\r\n        const response = await fetch('/registrationEndpoint', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                name,\r\n                email,\r\n                password,\r\n                age,\r\n                gender,\r\n                country\r\n            })\r\n        });\r\n\r\n        if (!response.ok) {\r\n            throw new Error('Failed to register user');\r\n        }\r\n\r\n        // Відповідь успішна, тут можна виконати додаткові дії, якщо потрібно\r\n\r\n    } catch (error) {\r\n        // Виникла помилка при реєстрації користувача\r\n        throw new Error('Failed to register user: ' + error.message);\r\n    }\r\n}\r\n"],"mappings":"AAAA,OAAO,eAAeA,YAAYA,CAACC,QAAQ,EAAE;EACzC,IAAI;IACA;IACA,MAAM;MAAEC,IAAI;MAAEC,KAAK;MAAEC,QAAQ;MAAEC,GAAG;MAAEC,MAAM;MAAEC;IAAQ,CAAC,GAAGN,QAAQ;;IAEhE;IACA;IACA;IACA,MAAMO,QAAQ,GAAG,MAAMC,KAAK,CAAC,uBAAuB,EAAE;MAClDC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACjBZ,IAAI;QACJC,KAAK;QACLC,QAAQ;QACRC,GAAG;QACHC,MAAM;QACNC;MACJ,CAAC;IACL,CAAC,CAAC;IAEF,IAAI,CAACC,QAAQ,CAACO,EAAE,EAAE;MACd,MAAM,IAAIC,KAAK,CAAC,yBAAyB,CAAC;IAC9C;;IAEA;EAEJ,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZ;IACA,MAAM,IAAID,KAAK,CAAC,2BAA2B,GAAGC,KAAK,CAACC,OAAO,CAAC;EAChE;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}