{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Xiaomi\\\\Downloads\\\\practice-generated (1)\\\\practice\\\\src\\\\UserFileManager.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Backendless from 'backendless';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FileExplorer = () => {\n  _s();\n  const [fileList, setFileList] = useState([]);\n  const [directoryList, setDirectoryList] = useState([]);\n  const [currentDirectory, setCurrentDirectory] = useState('');\n  const [newDirectoryName, setNewDirectoryName] = useState('');\n  const [sharedWithUsername, setSharedWithUsername] = useState('');\n  const [isShareDialogOpen, setIsShareDialogOpen] = useState(false);\n  const [fileToShare, setFileToShare] = useState(null);\n  const user = Backendless.UserService.currentUser;\n  const navigate = useNavigate();\n  useEffect(() => {\n    fetchDirectoryContents(currentDirectory);\n  }, [currentDirectory]);\n  const fetchDirectoryContents = async dir => {\n    try {\n      const path = '/user_files/' + user.name + '/' + dir;\n      const filesAndDirs = await Backendless.Files.listing(path);\n      const directories = filesAndDirs.filter(item => item.name.indexOf('.') === -1);\n      const files = filesAndDirs.filter(item => item.name.indexOf('.') !== -1);\n      setFileList(files);\n      setDirectoryList(directories);\n    } catch (error) {\n      console.error('Failed to fetch files:', error);\n    }\n  };\n  const handleCreateDirectory = async () => {\n    try {\n      await Backendless.Files.createDirectory(`/user_files/${user.name}/${currentDirectory}/${newDirectoryName}`);\n      fetchDirectoryContents(currentDirectory);\n    } catch (error) {\n      console.error('Failed to create folder:', error);\n    }\n  };\n  const handleDelete = async itemName => {\n    try {\n      await Backendless.Files.remove(`/user_files/${user.name}/${currentDirectory}/${itemName}`);\n      fetchDirectoryContents(currentDirectory);\n    } catch (error) {\n      console.error('Failed to delete item:', error);\n    }\n  };\n  const handleUploadFile = async event => {\n    const file = event.target.files[0];\n    const path = `/user_files/${user.name}/${currentDirectory}/${file.name}`;\n    try {\n      await Backendless.Files.upload(file, path);\n      fetchDirectoryContents(currentDirectory);\n    } catch (error) {\n      console.error('Failed to upload file:', error);\n    }\n  };\n  const handleDirectoryNavigation = dirName => {\n    if (dirName === \"..\") {\n      const dirs = currentDirectory.split('/');\n      dirs.pop();\n      setCurrentDirectory(dirs.join('/'));\n    } else {\n      setCurrentDirectory(currentDirectory ? `${currentDirectory}/${dirName}` : dirName);\n    }\n  };\n  const handleShareDialogToggle = (fileName = null) => {\n    if (fileName) {\n      setFileToShare(fileName);\n    }\n    setIsShareDialogOpen(!isShareDialogOpen);\n    setSharedWithUsername('');\n  };\n  const checkUserExists = async () => {\n    try {\n      const userExists = await Backendless.Data.of(Backendless.User).find({\n        condition: `name = '${sharedWithUsername}'`\n      });\n      return userExists.length > 0;\n    } catch (error) {\n      console.error('Failed to check user existence:', error);\n      return false;\n    }\n  };\n  const saveSharedFile = async () => {\n    try {\n      const filePath = `/user_files/${sharedWithUsername}/shared_with_me/${fileToShare}.txt`;\n      const fileLink = `/user_files/${user.name}/${currentDirectory}/${fileToShare}`;\n      await Backendless.Files.saveFile(filePath, fileLink, true);\n      alert('Файл успішно поділено');\n    } catch (error) {\n      console.error('Failed to save shared file:', error);\n    }\n  };\n  const createSharedFile = async (fileName, fileLink, sharedWithUsername) => {\n    try {\n      // Створення нового Blob об'єкту з посиланням на файл як даними\n      const blob = new Blob([fileLink], {\n        type: 'text/plain'\n      });\n      // Створення URL для Blob об'єкту\n      const url = URL.createObjectURL(blob);\n      // Створення нового File об'єкту з Blob та ім'ям файлу\n      const file = new File([blob], fileName + '.txt', {\n        type: 'text/plain'\n      });\n      // Використання FormData для завантаження файлу на сервер\n      const formData = new FormData();\n      formData.append('file', file);\n      // Відправка файлу на сервер за допомогою Backendless API\n      await Backendless.Files.upload(formData, filePath);\n      // Звільнення URL для Blob об'єкту\n      URL.revokeObjectURL(url);\n    } catch (error) {\n      console.error('Failed to create shared file:', error);\n    }\n  };\n\n  // const createSharedFile = async (fileName, fileLink, sharedWithUsername) => {\n  //     try {\n  //         // Створення текстового вмісту для файлу\n  //         const fileContent = `Спільний доступ: ${fileLink}`;\n  //\n  //         // Створення Blob об'єкту з текстовим вмістом\n  //         const blob = new Blob([fileContent], { type: 'text/plain' });\n  //\n  //         // Створення URL для Blob об'єкту\n  //         const blobUrl = URL.createObjectURL(blob);\n  //\n  //         // Створення посилання для завантаження\n  //         const downloadLink = document.createElement('a');\n  //         downloadLink.href = blobUrl;\n  //         downloadLink.download = `${fileName}.txt`;\n  //\n  //         // Симулювання кліку на посилання для завантаження\n  //         downloadLink.click();\n  //     } catch (error) {\n  //         console.error('Failed to create shared file:', error);\n  //     }\n  // };\n\n  const handleShareFile = async () => {\n    try {\n      // Перевірка, чи існує користувач з вказаним ім'ям\n      const userExists = await checkUserExists();\n      if (!userExists) {\n        alert('Користувача не існує');\n        return;\n      }\n\n      // Отримання посилання на ваш файл\n      const fileLink = `/user_files/${user.name}/${currentDirectory}/${fileToShare}`;\n\n      // Створення текстового файлу із посиланням для користувача, з яким ділиться файлом\n      await createSharedFile(fileToShare, fileLink, sharedWithUsername);\n    } finally {\n      handleCloseShareDialog();\n    }\n  };\n  const handleSharedFileDownload = async fileName => {\n    try {\n      // Отримуємо шлях до текстового файлу з посиланням на завантаження\n      const filePath = `/user_files/${user.name}/shared_with_me/${fileName}.txt`;\n      // Завантажуємо вміст текстового файлу\n      const fileContent = await Backendless.Files.loadFile(filePath);\n      // Витягуємо посилання з вмісту текстового файлу\n      const fileLink = fileContent.trim(); // Припускаємо, що текстовий файл містить лише одне посилання без зайвих пробілів\n      // Переходимо за посиланням для завантаження файлу\n      window.open(fileLink);\n    } catch (error) {\n      console.error('Failed to download shared file:', error);\n    }\n  };\n  const handleLogout = () => {\n    Backendless.UserService.logout().then(r => navigate('/'));\n  };\n  const handleRefresh = () => {\n    fetchDirectoryContents(currentDirectory);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"\\u0424\\u0430\\u0439\\u043B\\u043E\\u0432\\u0438\\u0439 \\u043C\\u0435\\u043D\\u0435\\u0434\\u0436\\u0435\\u0440 (\", user === null || user === void 0 ? void 0 : user.name, \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleRefresh,\n      children: \"\\u041E\\u043D\\u043E\\u0432\\u0438\\u0442\\u0438 \\u0441\\u0442\\u043E\\u0440\\u0456\\u043D\\u043A\\u0443\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 13\n    }, this), isShareDialogOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: sharedWithUsername,\n        onChange: e => setSharedWithUsername(e.target.value),\n        placeholder: \"\\u0406\\u043C'\\u044F \\u043A\\u043E\\u0440\\u0438\\u0441\\u0442\\u0443\\u0432\\u0430\\u0447\\u0430\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleShareFile(fileToShare),\n        children: \"\\u041F\\u043E\\u0434\\u0456\\u043B\\u0438\\u0442\\u0438\\u0441\\u044F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleShareDialogToggle,\n        children: \"\\u0417\\u0430\\u043A\\u0440\\u0438\\u0442\\u0438\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleLogout(),\n      children: \"\\u0412\\u0438\\u0439\\u0442\\u0438 \\u0437 \\u0441\\u0438\\u0441\\u0442\\u0435\\u043C\\u0438\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 13\n    }, this), currentDirectory && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleDirectoryNavigation(\"..\"),\n      children: \"\\u041D\\u0430\\u0437\\u0430\\u0434\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 34\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: newDirectoryName,\n      onChange: e => setNewDirectoryName(e.target.value),\n      placeholder: \"\\u0406\\u043C'\\u044F \\u043D\\u043E\\u0432\\u043E\\u0457 \\u043F\\u0430\\u043F\\u043A\\u0438\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleCreateDirectory,\n      children: \"\\u0421\\u0442\\u0432\\u043E\\u0440\\u0438\\u0442\\u0438 \\u043F\\u0430\\u043F\\u043A\\u0443\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleUploadFile\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [directoryList.map(dir => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: dir.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 25\n        }, this), dir.name !== 'shared_with_me' && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDelete(dir.name),\n          children: \"\\u0412\\u0438\\u0434\\u0430\\u043B\\u0438\\u0442\\u0438\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDirectoryNavigation(dir.name),\n          children: \"\\u0412\\u0456\\u0434\\u043A\\u0440\\u0438\\u0442\\u0438\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 25\n        }, this)]\n      }, dir.name, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 21\n      }, this)), fileList.map(file => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: file.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDelete(file.name),\n          children: \"\\u0412\\u0438\\u0434\\u0430\\u043B\\u0438\\u0442\\u0438\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleShareDialogToggle(file.name),\n          children: \"\\u041F\\u043E\\u0434\\u0456\\u043B\\u0438\\u0442\\u0438\\u0441\\u044F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: file.publicUrl,\n          download: true,\n          children: \"\\u0421\\u043A\\u0430\\u0447\\u0430\\u0442\\u0438\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 25\n        }, this)]\n      }, file.name, true, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 188,\n    columnNumber: 9\n  }, this);\n};\n_s(FileExplorer, \"//En3Q12meeHd6nDymnr2dYNCBE=\", false, function () {\n  return [useNavigate];\n});\n_c = FileExplorer;\nexport default FileExplorer;\nvar _c;\n$RefreshReg$(_c, \"FileExplorer\");","map":{"version":3,"names":["React","useState","useEffect","Backendless","useNavigate","jsxDEV","_jsxDEV","FileExplorer","_s","fileList","setFileList","directoryList","setDirectoryList","currentDirectory","setCurrentDirectory","newDirectoryName","setNewDirectoryName","sharedWithUsername","setSharedWithUsername","isShareDialogOpen","setIsShareDialogOpen","fileToShare","setFileToShare","user","UserService","currentUser","navigate","fetchDirectoryContents","dir","path","name","filesAndDirs","Files","listing","directories","filter","item","indexOf","files","error","console","handleCreateDirectory","createDirectory","handleDelete","itemName","remove","handleUploadFile","event","file","target","upload","handleDirectoryNavigation","dirName","dirs","split","pop","join","handleShareDialogToggle","fileName","checkUserExists","userExists","Data","of","User","find","condition","length","saveSharedFile","filePath","fileLink","saveFile","alert","createSharedFile","blob","Blob","type","url","URL","createObjectURL","File","formData","FormData","append","revokeObjectURL","handleShareFile","handleCloseShareDialog","handleSharedFileDownload","fileContent","loadFile","trim","window","open","handleLogout","logout","then","r","handleRefresh","children","_jsxFileName","lineNumber","columnNumber","onClick","value","onChange","e","placeholder","map","href","publicUrl","download","_c","$RefreshReg$"],"sources":["C:/Users/Xiaomi/Downloads/practice-generated (1)/practice/src/UserFileManager.js"],"sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport Backendless from 'backendless';\r\nimport {useNavigate} from 'react-router-dom';\r\n\r\nconst FileExplorer = () => {\r\n    const [fileList, setFileList] = useState([]);\r\n    const [directoryList, setDirectoryList] = useState([]);\r\n    const [currentDirectory, setCurrentDirectory] = useState('');\r\n    const [newDirectoryName, setNewDirectoryName] = useState('');\r\n    const [sharedWithUsername, setSharedWithUsername] = useState('');\r\n    const [isShareDialogOpen, setIsShareDialogOpen] = useState(false);\r\n    const [fileToShare, setFileToShare] = useState(null);\r\n    const user = Backendless.UserService.currentUser;\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        fetchDirectoryContents(currentDirectory);\r\n    }, [currentDirectory]);\r\n\r\n    const fetchDirectoryContents = async (dir) => {\r\n        try {\r\n            const path = '/user_files/' + user.name + '/' + dir;\r\n            const filesAndDirs = await Backendless.Files.listing(path);\r\n            const directories = filesAndDirs.filter(item => item.name.indexOf('.') === -1);\r\n            const files = filesAndDirs.filter(item => item.name.indexOf('.') !== -1);\r\n            setFileList(files);\r\n            setDirectoryList(directories);\r\n        } catch (error) {\r\n            console.error('Failed to fetch files:', error);\r\n        }\r\n    };\r\n\r\n    const handleCreateDirectory = async () => {\r\n        try {\r\n            await Backendless.Files.createDirectory(`/user_files/${user.name}/${currentDirectory}/${newDirectoryName}`);\r\n            fetchDirectoryContents(currentDirectory);\r\n        } catch (error) {\r\n            console.error('Failed to create folder:', error);\r\n        }\r\n    };\r\n    const handleDelete = async (itemName) => {\r\n        try {\r\n            await Backendless.Files.remove(`/user_files/${user.name}/${currentDirectory}/${itemName}`);\r\n            fetchDirectoryContents(currentDirectory);\r\n        } catch (error) {\r\n            console.error('Failed to delete item:', error);\r\n        }\r\n    };\r\n\r\n    const handleUploadFile = async (event) => {\r\n        const file = event.target.files[0];\r\n        const path = `/user_files/${user.name}/${currentDirectory}/${file.name}`;\r\n        try {\r\n            await Backendless.Files.upload(file, path);\r\n            fetchDirectoryContents(currentDirectory);\r\n        } catch (error) {\r\n            console.error('Failed to upload file:', error);\r\n        }\r\n    };\r\n\r\n    const handleDirectoryNavigation = (dirName) => {\r\n        if (dirName === \"..\") {\r\n            const dirs = currentDirectory.split('/');\r\n            dirs.pop();\r\n            setCurrentDirectory(dirs.join('/'));\r\n        } else {\r\n            setCurrentDirectory(currentDirectory ? `${currentDirectory}/${dirName}` : dirName);\r\n        }\r\n    };\r\n\r\n    const handleShareDialogToggle = (fileName = null) => {\r\n        if (fileName) {\r\n            setFileToShare(fileName);\r\n        }\r\n        setIsShareDialogOpen(!isShareDialogOpen);\r\n        setSharedWithUsername('');\r\n    };\r\n\r\n\r\n    const checkUserExists = async () => {\r\n        try {\r\n            const userExists = await Backendless.Data.of(Backendless.User).find({condition: `name = '${sharedWithUsername}'`});\r\n            return userExists.length > 0;\r\n        } catch (error) {\r\n            console.error('Failed to check user existence:', error);\r\n            return false;\r\n        }\r\n    };\r\n\r\n    const saveSharedFile = async () => {\r\n        try {\r\n            const filePath = `/user_files/${sharedWithUsername}/shared_with_me/${fileToShare}.txt`;\r\n            const fileLink = `/user_files/${user.name}/${currentDirectory}/${fileToShare}`;\r\n            await Backendless.Files.saveFile(filePath, fileLink, true);\r\n            alert('Файл успішно поділено');\r\n        } catch (error) {\r\n            console.error('Failed to save shared file:', error);\r\n        }\r\n    };\r\n    const createSharedFile = async (fileName, fileLink, sharedWithUsername) => {\r\n        try {\r\n            // Створення нового Blob об'єкту з посиланням на файл як даними\r\n            const blob = new Blob([fileLink], { type: 'text/plain' });\r\n            // Створення URL для Blob об'єкту\r\n            const url = URL.createObjectURL(blob);\r\n            // Створення нового File об'єкту з Blob та ім'ям файлу\r\n            const file = new File([blob], fileName + '.txt', { type: 'text/plain' });\r\n            // Використання FormData для завантаження файлу на сервер\r\n            const formData = new FormData();\r\n            formData.append('file', file);\r\n            // Відправка файлу на сервер за допомогою Backendless API\r\n            await Backendless.Files.upload(formData, filePath);\r\n            // Звільнення URL для Blob об'єкту\r\n            URL.revokeObjectURL(url);\r\n        } catch (error) {\r\n            console.error('Failed to create shared file:', error);\r\n        }\r\n    };\r\n\r\n    // const createSharedFile = async (fileName, fileLink, sharedWithUsername) => {\r\n    //     try {\r\n    //         // Створення текстового вмісту для файлу\r\n    //         const fileContent = `Спільний доступ: ${fileLink}`;\r\n    //\r\n    //         // Створення Blob об'єкту з текстовим вмістом\r\n    //         const blob = new Blob([fileContent], { type: 'text/plain' });\r\n    //\r\n    //         // Створення URL для Blob об'єкту\r\n    //         const blobUrl = URL.createObjectURL(blob);\r\n    //\r\n    //         // Створення посилання для завантаження\r\n    //         const downloadLink = document.createElement('a');\r\n    //         downloadLink.href = blobUrl;\r\n    //         downloadLink.download = `${fileName}.txt`;\r\n    //\r\n    //         // Симулювання кліку на посилання для завантаження\r\n    //         downloadLink.click();\r\n    //     } catch (error) {\r\n    //         console.error('Failed to create shared file:', error);\r\n    //     }\r\n    // };\r\n\r\n\r\n\r\n    const handleShareFile = async () => {\r\n        try {\r\n            // Перевірка, чи існує користувач з вказаним ім'ям\r\n            const userExists = await checkUserExists();\r\n            if (!userExists) {\r\n                alert('Користувача не існує');\r\n                return;\r\n            }\r\n\r\n            // Отримання посилання на ваш файл\r\n            const fileLink = `/user_files/${user.name}/${currentDirectory}/${fileToShare}`;\r\n\r\n            // Створення текстового файлу із посиланням для користувача, з яким ділиться файлом\r\n            await createSharedFile(fileToShare, fileLink, sharedWithUsername);\r\n        } finally {\r\n            handleCloseShareDialog();\r\n        }\r\n    };\r\n\r\n    const handleSharedFileDownload = async (fileName) => {\r\n        try {\r\n            // Отримуємо шлях до текстового файлу з посиланням на завантаження\r\n            const filePath = `/user_files/${user.name}/shared_with_me/${fileName}.txt`;\r\n            // Завантажуємо вміст текстового файлу\r\n            const fileContent = await Backendless.Files.loadFile(filePath);\r\n            // Витягуємо посилання з вмісту текстового файлу\r\n            const fileLink = fileContent.trim(); // Припускаємо, що текстовий файл містить лише одне посилання без зайвих пробілів\r\n            // Переходимо за посиланням для завантаження файлу\r\n            window.open(fileLink);\r\n        } catch (error) {\r\n            console.error('Failed to download shared file:', error);\r\n        }\r\n    };\r\n\r\n    const handleLogout = () => {\r\n        Backendless.UserService.logout().then(r => navigate('/'))\r\n    };\r\n\r\n    const handleRefresh = () => {\r\n        fetchDirectoryContents(currentDirectory);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>Файловий менеджер ({user?.name})</h2>\r\n            <button onClick={handleRefresh}>Оновити сторінку</button>\r\n            {isShareDialogOpen && (\r\n                <div>\r\n                    <input type=\"text\" value={sharedWithUsername} onChange={e => setSharedWithUsername(e.target.value)}\r\n                           placeholder=\"Ім'я користувача\"/>\r\n                    <button onClick={() => handleShareFile(fileToShare)}>Поділитися</button>\r\n                    <button onClick={handleShareDialogToggle}>Закрити</button>\r\n                </div>\r\n            )}\r\n            <button onClick={() => handleLogout()}>Вийти з системи</button>\r\n            {currentDirectory && <button onClick={() => handleDirectoryNavigation(\"..\")}>Назад</button>}\r\n            <input type=\"text\" value={newDirectoryName} onChange={e => setNewDirectoryName(e.target.value)}\r\n                   placeholder=\"Ім'я нової папки\"/>\r\n            <button onClick={handleCreateDirectory}>Створити папку</button>\r\n            <input type=\"file\" onChange={handleUploadFile}/>\r\n            <ul>\r\n                {directoryList.map(dir => (\r\n                    <li key={dir.name}>\r\n                        <span>{dir.name}</span>\r\n                        {dir.name !== 'shared_with_me' &&\r\n                            <button onClick={() => handleDelete(dir.name)}>Видалити</button>}\r\n                        <button onClick={() => handleDirectoryNavigation(dir.name)}>Відкрити</button>\r\n                    </li>\r\n                ))}\r\n                {fileList.map(file => (\r\n                    <li key={file.name}>\r\n                        <span>{file.name}</span>\r\n                        <button onClick={() => handleDelete(file.name)}>Видалити</button>\r\n                        <button onClick={() => handleShareDialogToggle(file.name)}>Поділитися</button>\r\n                        <a href={file.publicUrl} download>Скачати</a>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FileExplorer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}